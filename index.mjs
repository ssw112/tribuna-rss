import { chromium } from '@playwright/test';
import { writeFileSync, mkdirSync } from 'fs';

const SOURCE = 'https://ua.tribuna.com/news/';
const MAX_ITEMS = 25;

function esc(s='') {
  return s.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;');
}

async function run() {
  const browser = await chromium.launch({ headless: true });
  const ctx = await browser.newContext({
    userAgent: 'Mozilla/5.0 (GitHubActions Playwright RSS)'
  });
  const page = await ctx.newPage();
  await page.goto(SOURCE, { waitUntil: 'networkidle' });

  // Try to activate “Main news” tab (UA/RU)
  try {
    const btn = await page.locator('a:has-text("Головні новини"), a:has-text("Главные новости")').first();
    if (await btn.count()) await btn.click();
  } catch {}

  await page.waitForTimeout(1200);

  const items = await page.evaluate((MAX_ITEMS) => {
    const anchors = Array.from(document.querySelectorAll('a[href*="/news/"]'));
    const seen = new Set(), out = [];
    for (const a of anchors) {
      const href = a.href;
      if (!/\/news\/\d+/.test(href)) continue;
      if (seen.has(href)) continue;
      seen.add(href);

      let title = (a.textContent || a.getAttribute('title') || href)
        .replace(/\s+/g,' ')
        .trim();
      out.push({ href, title });
      if (out.length >= MAX_ITEMS) break;
    }
    return out;
  }, MAX_ITEMS);

  await browser.close();

  const now = new Date().toUTCString();
  const rssItems = items.map(it => `
    <item>
      <title>${esc(it.title)}</title>
      <link>${esc(it.href)}</link>
      <guid isPermaLink="true">${esc(it.href)}</guid>
      <pubDate>${now}</pubDate>
      <description>${esc(it.title)}</description>
    </item>`).join('');

  const xml = `<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"><channel>
  <title>Tribuna UA — Main News</title>
  <link>${SOURCE}</link>
  <description>Custom RSS generated by Playwright on GitHub Actions</description>
  <lastBuildDate>${now}</lastBuildDate>
  ${rssItems}
</channel></rss>`;

  mkdirSync('docs', { recursive: true });
  writeFileSync('docs/feed.xml', xml, 'utf8');
  console.log(`Wrote docs/feed.xml with ${items.length} items`);
}

run().catch(e => {
  console.error(e);
  process.exit(1);
});
